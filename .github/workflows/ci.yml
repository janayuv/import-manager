name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-lint:
    name: Frontend Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Run TypeScript type check
      run: npm run type-check
    
    - name: Run Prettier check
      run: npx prettier --check .

  backend-check:
    name: Backend Check & Format
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install cargo-deny
      run: cargo install cargo-deny
    
    - name: Check Rust code
      run: |
        cd src-tauri
        cargo check
    
    - name: Run Clippy
      run: |
        cd src-tauri
        cargo clippy -- -D warnings
    
    - name: Check Rust formatting
      run: |
        cd src-tauri
        cargo fmt -- --check
    
    - name: Check for security vulnerabilities
      run: |
        cd src-tauri
        cargo deny check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [frontend-lint, backend-check]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run frontend tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Run backend tests
      run: |
        cd src-tauri
        cargo test
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [frontend-lint, backend-check]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run tauri build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: import-manager-build
        path: src-tauri/target/release/
