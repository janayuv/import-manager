name: Secure Build and Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  TAURI_VERSION: '1.5'

jobs:
  security-scan:
    name: Security Scan
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run custom security scanner
        run: node scripts/security-check.js

      - name: Run ESLint security checks
        run: npx eslint . --ext .ts,.tsx,.js,.jsx,.yml,.yaml --max-warnings 0

  test:
    name: Test
    runs-on: windows-latest
    needs: security-scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run type checking
        run: npx tsc --noEmit

  build:
    name: Build Tauri App
    runs-on: windows-latest
    needs: [security-scan, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        run: npm run tauri build
        env:
          # Use GitHub Secrets instead of hardcoded values
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app
          path: src-tauri/target/release/
          retention-days: 30

  deploy:
    name: Deploy
    runs-on: windows-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: tauri-app

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your deployment logic here
          # Example: Upload to S3, deploy to server, etc.
        env:
          # Use GitHub Secrets for deployment credentials
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          DEPLOY_URL: ${{ secrets.DEPLOY_URL }}

      - name: Notify deployment
        run: |
          echo "Deployment completed successfully!"
          # Add notification logic here (Slack, email, etc.)
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
